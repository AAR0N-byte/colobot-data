# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-02 12:51+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: One-char language identifier
#: train701.languagecode:1
#, no-wrap
msgid "E"
msgstr "R"

#. type: Title-text
#: train701/scene.txt:1
#, no-wrap
msgid "train701:Remote control #3"
msgstr "train701:Дистанционное управление #3"

#. type: Resume-text
#: train701/scene.txt:2
#, no-wrap
msgid "train701:Remote control a bot without using an information exchange post by using a string."
msgstr "train701:Дистанционное управление ботом без использования поста обменом информацией."

#. type: ScriptName-text
#: train701/scene.txt:3
#, no-wrap
msgid "train701:Remote3"
msgstr "train701:Remote3"

#. type: \b; header
#: train701-help/tremote3.txt:1
#, fuzzy, no-wrap
msgid "Exercice"
msgstr "Упражнение"

#. type: Plain text
#: train701-help/tremote3.txt:3
#, fuzzy, no-wrap
msgid "Remote control a slave robot without using an <a object|exchange>information exchange post</a>. The robot should pass over the 6 blue crosses. You must use a <a cbot|string>string</a> to pass the orders to the slave bot. This string contains the order the slave shoud execute, for exemple <code>\"move(20)\"</code>. You can see that this is the same syntax as used in the CBOT language but we could have chosen any other syntax for exemple something like <code>\"advance=20\"</code>. The string will be a <code><a cbot|static>static</a></code> class member that will be used to communicate from the master to the slave."
msgstr "Дистанционное управление ботом без использования <a object|exchange>поста обменом информацией</a>. Бот должен проехать по 6 синим отметкам. Вам потребуется использовать команду <a cbot|string>string</a> для того, чтобы передавать команды управляемому боту. Эта строка будет содержать порядок выполнения, например <code>\"move(20)\"</code>. Вы видите, что это тот же синтаксис, используемый в языке CBOT, но мы могли бы выбрать любой другой синтаксис, например что-то вроде <code>\"advance=20\"</code>. Эта строка имеет <code><a cbot|static>статичный</a></code> класс, который будет использован для связи ведущего бота(master, тот, кто управляет) с ведомым ботом(slave, тот, кем управляют)."

#. type: Plain text
#: train701-help/tremote3.txt:5
#, fuzzy, no-wrap
msgid "The two main actors of this exercise are:\n"
msgstr "Что потребуется:\n"

#. type: Bullet: '1)'
#: train701-help/tremote3.txt:5
#, fuzzy, no-wrap
msgid "The <a object|botgr>wheeled grabber</a> without an energy pack and therefore immobile. This is the master you should program so it will transmit orders to the slave."
msgstr "<a object|botgr>Колесный сборщик</a> без батареи. Данный бот будет ведущим."

#. type: Bullet: '2)'
#: train701-help/tremote3.txt:6
#, fuzzy, no-wrap
msgid "The slave <a object|bottr>practice bot</a> which is already programmed and just waits for orders from the master."
msgstr "Ведомый <a object|bottr>тренировочный бот</a> запрограммированый заранее на ожидание комманд от ведущего бота."

#. type: \b; header
#: train701-help/tremote3.txt:8
#, fuzzy, no-wrap
msgid "The slave"
msgstr "Ведомый"

#. type: Plain text
#: train701-help/tremote3.txt:10
#, fuzzy, no-wrap
msgid "First of all we must understand how the program of the slave works. The <a cbot|class>class</a> <code>exchange</code> contains the mechanism for exchaning the orders. We declare a <code><a cbot|static>static</a></code> class member <code>m_order</code> which will contain the order to be executed. The word <code>static</code> insures that the member <code>m_order</code> is shared between all instances of the <a cbot|class>class</a> exchange."
msgstr "Прежде всего нужно понять, как программа работает. <a cbot|class>Класс</a> <code>exchange</code> содержит в себе механизм обмена данными. Мы заявляем <code><a cbot|static>статичный</a></code> номер класса <code>m_order</code> который содержит в себе команды для выполнения. Слово <code>статический</code> гарантирует, что <code>m_order</code> будет одинаковым во всех <a cbot|class>классах</a>."

#. type: Plain text
#: train701-help/tremote3.txt:12
#, fuzzy, no-wrap
msgid "<c/><s/><a cbot|public>public</a> <a cbot|class>class</a> exchange"
msgstr "<c/><s/><a cbot|public>public</a> <a cbot|class>class</a> exchange"

#. type: \s; block (usually verbatim code)
#: train701-help/tremote3.txt:14
#, fuzzy, no-wrap
msgid ""
"{\n"
"\t<a cbot|static>static</a> <a cbot|private>private</a> <a cbot|string>string</a> m_order = \"\";"
msgstr ""
"{\n"
"\t<a cbot|static>static</a> <a cbot|private>private</a> <a cbot|string>string</a> m_order = \"\";"

#. type: Plain text
#: train701-help/tremote3.txt:16
#, fuzzy, no-wrap
msgid "<n/>The <code>put</code> method will be used by the master robot for transmitting an order. As long as the string <code>m_order</code> is not empty, the slave has not finished the order and the <code>put</code> method will return <code>false</code> and will do nothing."
msgstr "<n/>Метод <code>\"put\"</code> позволит ведущему боту передавать команды. Пока строка <code>m_order</code> не будет очищена, ведомый бот не закончит работу и метод <code>put</code> вернет <code>ложь</code>(т.е. бот ничего не будет делать)."

#. type: Plain text
#: train701-help/tremote3.txt:18
#, fuzzy, no-wrap
msgid "<c/><s/>\t<a cbot|synchro>synchronized</a> <a cbot|bool>bool</a> put(string order)"
msgstr "<c/><s/>\t<a cbot|synchro>synchronized</a> <a cbot|bool>bool</a> put(string order)"

#. type: \s; block (usually verbatim code)
#: train701-help/tremote3.txt:29
#, fuzzy, no-wrap
msgid ""
"\t{\n"
"\t\tif ( m_order == \"\" )\n"
"\t\t{\n"
"\t\t\tm_order = order;\n"
"\t\t\treturn true;\n"
"\t\t}\n"
"\t\telse\n"
"\t\t{\n"
"\t\t\treturn false;\n"
"\t\t}\n"
"\t}"
msgstr ""
"\t{\n"
"\t\tif ( m_order == \"\" )\n"
"\t\t{\n"
"\t\t\tm_order = order;\n"
"\t\t\treturn true;\n"
"\t\t}\n"
"\t\telse\n"
"\t\t{\n"
"\t\t\treturn false;\n"
"\t\t}\n"
"\t}"

#. type: Plain text
#: train701-help/tremote3.txt:31
#, fuzzy, no-wrap
msgid "Another method <code>get</code> will be used by the slave to retrieve the orders. This method returns the string contained in <code>m_order</code> and empties it, so a new order can be accepted:"
msgstr "Другой метод <code>get</code> может быть использован ведомым ботом для получения задания. Этот метод возвращает в строку <code>m_order</code> заявку(order) на выполнение работы:"

#. type: Plain text
#: train701-help/tremote3.txt:33
#, fuzzy, no-wrap
msgid "<c/><s/>\t<a cbot|synchro>synchronized</a> string get()"
msgstr "<c/><s/>\t<a cbot|synchro>synchronized</a> string get()"

#. type: \s; block (usually verbatim code)
#: train701-help/tremote3.txt:39
#, fuzzy, no-wrap
msgid ""
"\t{\n"
"\t\tstring ret = m_order;\n"
"\t\tm_order = \"\";\n"
"\t\treturn ret;\n"
"\t}\n"
"}"
msgstr ""
"\t{\n"
"\t\tstring ret = m_order;\n"
"\t\tm_order = \"\";\n"
"\t\treturn ret;\n"
"\t}\n"
"}"

#. type: Plain text
#: train701-help/tremote3.txt:41
#, fuzzy, no-wrap
msgid "The main program of the slave contains an instance of the class <code>exchange</code> called <code>list</code>."
msgstr "Основная программа в ведомом боте содержит класс <code>exchange</code> вызываемый через <code>list</code>."

#. type: Plain text
#: train701-help/tremote3.txt:43
#, fuzzy, no-wrap
msgid "<c/><s/><a cbot|extern>extern</a> void object::Slave3( )"
msgstr "<c/><s/><a cbot|extern>extern</a> void object::Slave3( )"

#. type: \s; block (usually verbatim code)
#: train701-help/tremote3.txt:46
#, fuzzy, no-wrap
msgid ""
"{\n"
"\texchange list();\n"
"\tstring   todo;"
msgstr ""
"{\n"
"\texchange list();\n"
"\tstring   todo;"

#. type: Plain text
#: train701-help/tremote3.txt:48
#, fuzzy, no-wrap
msgid "The outer <code>while</code> loop lasts for ever. The inner <code>while</code> loop waits for an order by using the <code>get</code> method of the <code>exchange</code> class. As soon as <code>get</code> returns a non empty string, the while loop stops."
msgstr "Внешний <code>цикл</code> длится вечно. Внутренний <code>цикл</code> ждет заявку с помощью метода <code>get</code> и <code>exchange</code> класса. Как только метод <code>get</code> вернет не пустую строку, цикл остановится."

#. type: Plain text
#: train701-help/tremote3.txt:50
#, fuzzy, no-wrap
msgid "<c/><s/>\t<a cbot|while>while</a> ( true )"
msgstr "<c/><s/>\t<a cbot|while>while</a> ( true )"

#. type: \s; block (usually verbatim code)
#: train701-help/tremote3.txt:57
#, fuzzy, no-wrap
msgid ""
"\t{\n"
"\t\t<a cbot|while>while</a> ( true )\n"
"\t\t{\n"
"\t\t\ttodo = list.get();\n"
"\t\t\tif ( todo != \"\" )  break;\n"
"\t\t\twait(1);\n"
"\t\t}"
msgstr ""
"\t{\n"
"\t\t<a cbot|while>while</a> ( true )\n"
"\t\t{\n"
"\t\t\ttodo = list.get();\n"
"\t\t\tif ( todo != \"\" )  break;\n"
"\t\t\twait(1);\n"
"\t\t}"

#. type: Plain text
#: train701-help/tremote3.txt:59
#, fuzzy, no-wrap
msgid "Now we have received the order in the <code>todo</code> variable. All we have to do is execute it:"
msgstr "Теперь мы получили заявку в переменную <code>todo</code>. Значит нам нужно выполнить заказ:"

#. type: Plain text
#: train701-help/tremote3.txt:61
#, fuzzy, no-wrap
msgid "<c/><s/>\t\tif ( <a cbot|strfind>strfind</a>(todo, \"move\") == 0 )"
msgstr "<c/><s/>\t\tif ( <a cbot|strfind>strfind</a>(todo, \"move\") == 0 )"

#. type: \s; block (usually verbatim code)
#: train701-help/tremote3.txt:70
#, fuzzy, no-wrap
msgid ""
"\t\t{\n"
"\t\t\tmove(<a cbot|strval>strval</a>(<a cbot|strmid>strmid</a>(todo,5)));\n"
"\t\t}\n"
"\t\tif ( strfind(todo, \"turn\") == 0 )\n"
"\t\t{\n"
"\t\t\tturn(strval(strmid(todo,5)));\n"
"\t\t}\n"
"\t}\n"
"}"
msgstr ""
"\t\t{\n"
"\t\t\tmove(<a cbot|strval>strval</a>(<a cbot|strmid>strmid</a>(todo,5)));\n"
"\t\t}\n"
"\t\tif ( strfind(todo, \"turn\") == 0 )\n"
"\t\t{\n"
"\t\t\tturn(strval(strmid(todo,5)));\n"
"\t\t}\n"
"\t}\n"
"}"

#. type: \b; header
#: train701-help/tremote3.txt:71
#, fuzzy, no-wrap
msgid "The master"
msgstr "Ведущий"

#. type: Plain text
#: train701-help/tremote3.txt:73
#, fuzzy, no-wrap
msgid "In the master we write an function called <code>SendOrder</code> which will send an order to the slave:"
msgstr "В ведущем боте создадим функцию <code>SendOrder</code>, которая будет отправлять заказы к ведомому боту:"

#. type: Plain text
#: train701-help/tremote3.txt:75
#, fuzzy, no-wrap
msgid "<c/><s/>void object::SendOrder(string order)"
msgstr "<c/><s/>void object::SendOrder(string order)"

#. type: \s; block (usually verbatim code)
#: train701-help/tremote3.txt:83
#, fuzzy, no-wrap
msgid ""
"{\n"
"\texchange list();\n"
"\t\n"
"\twhile ( list.put(order) == false )\n"
"\t{\n"
"\t\twait(1);\n"
"\t}\n"
"}"
msgstr ""
"{\n"
"\texchange list();\n"
"\t\n"
"\twhile ( list.put(order) == false )\n"
"\t{\n"
"\t\twait(1);\n"
"\t}\n"
"}"

#. type: Plain text
#: train701-help/tremote3.txt:86
#, fuzzy, no-wrap
msgid ""
"The <code>while</code> loop waits until a pending order has been terminated, that is the slaved has exited from the <code>get</code> method.\n"
"Now the main program of the master is very simple:"
msgstr ""
"<code>Цикл</code> ждет, пока ожидаемая заявка не будет выполнена.\n"
"Пока программа для ведущего бота довольно проста:"

#. type: Plain text
#: train701-help/tremote3.txt:88
#, fuzzy, no-wrap
msgid "<c/><s/>extern void object::Remote3( )"
msgstr "<c/><s/>extern void object::Remote3( )"

#. type: \s; block (usually verbatim code)
#: train701-help/tremote3.txt:99
#, fuzzy, no-wrap
msgid ""
"{\n"
"\tSendOrder(\"move(20)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(20)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"\tSendOrder(\"turn(-90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"}"
msgstr ""
"{\n"
"\tSendOrder(\"move(20)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(20)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"\tSendOrder(\"turn(-90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"}"

#. type: Plain text
#: train701-help/tremote3.txt:101
#, fuzzy, no-wrap
msgid "<format key><key help/></format> show these instruction at any time."
msgstr "Клавиша <format key><key help/></format> показывает эту инструкцию в любое время."

#. type: \t; header
#: train701-help/tremote3.txt:102
#, fuzzy, no-wrap
msgid "See also"
msgstr "Смотри также"

#. type: Plain text
#: train701-help/tremote3.txt:103
#, fuzzy, no-wrap
msgid "<a command>Controls</a> and <a cbot>programming</a>."
msgstr "<a cbot>Язык CBOT</a>, <a cbot|type>Переменные</a> и <a cbot|category>Категории</a>."
