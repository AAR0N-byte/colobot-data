# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-02 12:51+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: One-char language identifier
#: train601.languagecode:1
#, no-wrap
msgid "E"
msgstr "R"

#. type: Title-text
#: train601/scene.txt:1
#, no-wrap
msgid "train601:A function"
msgstr "train601:Функция"

#. type: Resume-text
#: train601/scene.txt:2
#, no-wrap
msgid "train601:Create a function in order to make your program shorter."
msgstr "train601:Создайте функцию чтобы запрограммировать стрелка."

#. type: ScriptName-text
#: train601/scene.txt:3
#, no-wrap
msgid "train601:Move"
msgstr "train601:Move"

#. type: \b; header
#: train601-help/tproc1.txt:1
#, fuzzy, no-wrap
msgid "Exercise"
msgstr "Упражнение"

#. type: Plain text
#: train601-help/tproc1.txt:3
#, fuzzy, no-wrap
msgid "The <a object|bottr>bot</a> must pass over all the <a object|waypoint>blue crosses</a> on the ground. The way that must be covered is made of two squares. The first one measures 15 meters, the second 25 meters."
msgstr "<a object|bottr>Бот</a> должен пройти через все <a object|waypoint>синие кресты</a> на земле. Путь, который следует преодолеть, состоит из двух квадратов. Первый - 15 метров, второй - 25 метров."

#. type: Image filename
#: train601-help/tproc1.txt:4
#, fuzzy, no-wrap
msgid "tproc1a"
msgstr "tproc1a"

#. type: \b; header
#: train601-help/tproc1.txt:5
#, fuzzy, no-wrap
msgid "General principle"
msgstr "Общий принцип"

#. type: Plain text
#: train601-help/tproc1.txt:7
#, fuzzy, no-wrap
msgid "In order to solve this problem, the most efficient solution consists in creating a <a cbot|function>function</a> that instructs the bot to move on a square shape of a certain size. The main program becomes then very simple:<c/>"
msgstr "Чтобы решить эту задачу, вы должны создать функцию, которая приказывает боту двигаться по квадрату с указанной стороной. Поэтому основная программа оказывается очень простой:<c/>"

#. type: \s; block (usually verbatim code)
#: train601-help/tproc1.txt:12
#, fuzzy, no-wrap
msgid ""
"extern void object::Function1( )\n"
"{\n"
"\tSquare(15);\n"
"\tSquare(25);\n"
"}"
msgstr ""
"extern void object::Function1( )\n"
"{\n"
"\tSquare(15);\n"
"\tSquare(25);\n"
"}"

#. type: Plain text
#: train601-help/tproc1.txt:14
#, fuzzy, no-wrap
msgid "You still have to define the function called <code>Square</code>. In order to do this, you will have to write some instructions outside the <a cbot|bloc>block</a> that until now was the frame of each one of your programs. At the very end of the program, after the last closing brace, we will define the function <code>Square</code>. The program will take the following shape:"
msgstr "Вам все еще нужно определить функцию, которая называется <code>Square</code>. Чтобы это сделать, вы должны написать несколько инструкций, вне <a cbot|bloc>блока</a> , которые до этого времени были фреймом каждой из ваших программ. В самом конце программы после последней закрывающей скобки мы определим функцию <code>Square</code>. Тогда программа примет следующий вид:"

#. type: \s; block (usually verbatim code)
#: train601-help/tproc1.txt:24
#, fuzzy, no-wrap
msgid ""
"extern void object::Function1( )\n"
"{\n"
"\t<n/>main function ...<code>\n"
"}\n"
"\n"
"void object::Square(float length)\n"
"{\n"
"\t</code>new function ...<c/>\n"
"}"
msgstr ""
"extern void object::Function1( )\n"
"{\n"
"\t<n/>главная функция ...<code>\n"
"}\n"
"\n"
"void object::Square(float length)\n"
"{\n"
"\t</code>новая функция ...<c/>\n"
"}"

#. type: Plain text
#: train601-help/tproc1.txt:26
#, fuzzy, no-wrap
msgid "Let us look in detail at the different elements of the declaration of the function <code>Square</code>:"
msgstr "Теперь давайте детально разберем различные элементы задания функции <code>Square</code>:"

#. type: Plain text
#: train601-help/tproc1.txt:29
#, fuzzy, no-wrap
msgid ""
"<code><a cbot|void>void</a></code>\n"
"This means that this function will return no value."
msgstr ""
"<code><a cbot|void>void</a></code>\n"
"Это значит, что эта функция не будет возвращать значение."

#. type: Plain text
#: train601-help/tproc1.txt:32
#, fuzzy, no-wrap
msgid ""
"<code><a cbot|object>object</a>::</code>\n"
"When you write this in front of the function name, you can have access in the function to all the characteristics of the bot, such as <code>position</code>, <code>orientation</code>, etc. In this exercise, this element is not compulsory, as we will not need the characteristics of the bot in the function."
msgstr ""
"<code><a cbot|object>object</a>::</code>\n"
"Если вы напишите это перед именем функции, то сможете с ее помощью получить доступ ко всем характеристикам бота, таким как <code>позиция</code>, <code>ориентация</code>, и т.п. В этом упражнении этот элемент не обязателен, так как нам для функции характеристики ботов не нужны."

#. type: Plain text
#: train601-help/tproc1.txt:35
#, fuzzy, no-wrap
msgid ""
"<code>Square (  )</code>\n"
"This is the name of the function. You can call it Square, or any other name."
msgstr ""
"<code>Square (  )</code>\n"
"Это имя функции. Вы можете назвать ее Square, или дать любое другое имя."

#. type: Plain text
#: train601-help/tproc1.txt:38
#, fuzzy, no-wrap
msgid ""
"<code><a cbot|float>float</a> length</code>\n"
"Here you define the parameters that the function will get when it is called. The first time the function is actually called with <code>Square(15)</code>, the variable <code>length</code> will contain the value <code>15</code>. The second time, <code>length</code> will contain <code>25</code>."
msgstr ""
"<code><a cbot|float>float</a> length</code>\n"
"Здесь вы задаете параметры, которые получит функция после того как функция будет вызвана. При первом вызове функции с помощью <code>Square(15)</code>, переменная <code>length</code> будет содержать значение <code>15</code>. При втором вызове, <code>length</code> будет <code>25</code>."

#. type: Plain text
#: train601-help/tproc1.txt:40
#, fuzzy, no-wrap
msgid "Here is in detail what will happen when the program is executed:\n"
msgstr "Вот детальное описание того, что произойдет после запуска программы:\n"

#. type: Bullet: '-'
#: train601-help/tproc1.txt:40
#, fuzzy, no-wrap
msgid "First the main function <code>Function</code> will be executed."
msgstr "Сначала будет запущена главная функция <code>Function</code>."

#. type: Bullet: '-'
#: train601-help/tproc1.txt:41
#, fuzzy, no-wrap
msgid "At the line <code>Square(15)</code>, the program will follow the red arrow and enter the function <code>Square</code> a first time, <code>length</code> containing <code>15</code>."
msgstr "В строке <code>Square(15)</code> программа будет следовать за красной стрелкой и перейдет в функцию <code>Square</code> в первый раз, <code>length</code> содержит <code>15</code>."

#. type: Bullet: '-'
#: train601-help/tproc1.txt:42
#, fuzzy, no-wrap
msgid "At the end of the function <code>Square</code>, the program follows the orange arrow and comes back to the main function."
msgstr "При завершении функции <code>Square</code> программа следует за оранжевой стрелкой и возвращается к главной функции."

#. type: Bullet: '-'
#: train601-help/tproc1.txt:43
#, fuzzy, no-wrap
msgid "At the line <code>Square(25)</code>, the program will follow the blue arrow and enter the function <code>Square</code> a second time."
msgstr "В строке <code>Square(25)</code> программа следует за синей стрелкой и переходит в функцию <code>Square</code> во второй раз."

#. type: Bullet: '-'
#: train601-help/tproc1.txt:44
#, fuzzy, no-wrap
msgid "At the end of the function <code>Square</code>, the program follows the light blue arrow and comes back to the main function."
msgstr "При окончании функции <code>Square</code>, программа следует за голубой стрелкой и возвращается к главной функции."

#. type: Image filename
#: train601-help/tproc1.txt:46
#, fuzzy, no-wrap
msgid "tproc1b"
msgstr "tproc1b"

#. type: Plain text
#: train601-help/tproc1.txt:48
#, fuzzy, no-wrap
msgid "In the function <code>Square</code>, use the instructions <code><a cbot|move>move</a></code> and <code><a cbot|turn>turn</a></code>. In order to make it shorter, you can use a <code><a cbot|for>for</a></code> loop, that will repeat the instructions <code><a cbot|move>move</a></code> and <code><a cbot|turn>turn</a></code> 4 times; however, this is not compulsory."
msgstr "В функции <code>Square</code> используйте инструкции <code><a cbot|move>move</a></code> и <code><a cbot|turn>turn</a></code>. Чтобы сделать ее покороче, вы можете использовать цикл <code><a cbot|for>for</a></code>, который повторит инструкции <code><a cbot|move>move</a></code> и <code><a cbot|turn>turn</a></code> 4 раза; но это не обязательно."

#. type: \s; block (usually verbatim code)
#: train601-help/tproc1.txt:57
#, fuzzy, no-wrap
msgid ""
"void object::Square(float length)\n"
"{\n"
"\tfor ( int i=0 ; i<4 ; i=i+1 )\n"
"\t{\n"
"\t\tmove(length);\n"
"\t\tturn(90);\n"
"\t}\n"
"}"
msgstr ""
"void object::Square(float length)\n"
"{\n"
"\tfor ( int i=0 ; i<4 ; i=i+1 )\n"
"\t{\n"
"\t\tmove(length);\n"
"\t\tturn(90);\n"
"\t}\n"
"}"

#. type: \t; header
#: train601-help/tproc1.txt:58
#, fuzzy, no-wrap
msgid "See also"
msgstr "См. также"

#. type: Plain text
#: train601-help/tproc1.txt:59
#, fuzzy, no-wrap
msgid "<a cbot>Programming</a>, <a cbot|type>types</a> and <a cbot|category>categories</a>."
msgstr "<a cbot>Программирование</a>, <a cbot|type>типы</a> и <a cbot|category>категории</a>."
